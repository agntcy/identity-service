#!/bin/sh
# Copyright 2025 Cisco Systems, Inc. and its affiliates
# SPDX-License-Identifier: Apache-2.0

# Constants
HYDRA_QUICKSTART_FILE="quickstart.yml"
HYDRA_REPOSITORY="https://github.com/ory/hydra.git"
HYDRA_VERSION="v2.3.0"
HYDRA_BINARY="hydra"

#######################################
# Create an Hydra application using the Hydra CLI.
#######################################
do_run_hydra_create_app() {
  # Create temporary configuration file
  temp_dir=$(mktemp -d)
  temp_file="$temp_dir/$HYDRA_APP_CONFIG_FILE_NAME"

  # Create the application
  "$HYDRA_BINARY" apps create --app-name="$APP_NAME_PREFIX-$(date +%s)" --config-file="$temp_file"

  # Load output variables to environment variables
  . "$temp_file"

  # Print the configuration file content
  cat "$temp_file"

  # Clean up temporary configuration file
  rm -rvf "$temp_dir" > /dev/null
}

#######################################
# Verify if Hydra CLI is installed.
#######################################
do_verify_hydra_cli() {
  if ! command -v hydra > /dev/null; then
    echo "Hydra CLI is not installed. Please install it."
    echo "You can install it using the following guide: https://www.ory.sh/docs/guides/cli/installation"

    return 1
  fi
}

#######################################
# Set up Hydra by creating a scope and a default policy.
# #######################################
do_setup_hydra() {
  echo "Setting up Hydra..."

  # Get current IP address
  current_ip=$(hostname -I | awk '{print $1}')
}

do_start_hydra_server() {
  # Check if the Hydra CLI is installed
  if ! do_verify_hydra_cli; then
    echo "Hydra CLI is not installed. Please install it before proceeding."
    return 1
  fi

  echo "Starting Hydra OAuth2 Server..."

  # Clone the Hydra repository if it doesn't exist
  git clone "$HYDRA_REPOSITORY" || echo "Hydra repository already cloned."
  cd hydra && git checkout "$HYDRA_VERSION" || echo "Hydra version $HYDRA_VERSION already checked out."

  # Start Hydra using docker compose
  docker compose -f "$HYDRA_QUICKSTART_FILE" up -d

  # Wait for Hydra to start
  sleep 5

  echo "Hydra OAuth2 Server started."
}

do_stop_hydra_server() {
  echo "Stopping Hydra OAuth2 Server..."

  # Stop Hydra using docker compose
  docker compose -f "$HYDRA_QUICKSTART_FILE" down

  # Clean up Hydra repository
  cd .. && rm -rf hydra

  echo "Hydra OAuth2 Server stopped."
}

# Start Hydra OAuth2 Server
do_start_hydra_server

# Wait for Ctrl+C to stop the server
echo "Press Ctrl+C to stop the Hydra OAuth2 Server..."
trap 'echo "Stopping..."; do_stop_hydra_server; exit 0' INT
while true; do sleep 1; done

# Stop Hydra OAuth2 Server
do_stop_hydra_server
