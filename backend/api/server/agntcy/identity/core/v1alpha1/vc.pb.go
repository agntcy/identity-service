// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: agntcy/identity-saas/core/v1alpha1/vc.proto

package identity_core_sdk_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	structpb "google.golang.org/protobuf/types/known/structpb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The content of the Credential.
// Multiple content types can be supported: AgentBadge, etc.
type CredentialContentType int32

const (
	// Unspecified Content Type.
	CredentialContentType_CREDENTIAL_CONTENT_TYPE_UNSPECIFIED CredentialContentType = 0
	// AgentBadge Content Type.
	// The Agent content representation following a defined schema
	// OASF: https://schema.oasf.agntcy.org/schema/objects/agent
	// Google A2A: https://github.com/google/A2A/blob/main/specification/json/a2a.json
	CredentialContentType_CREDENTIAL_CONTENT_TYPE_AGENT_BADGE CredentialContentType = 1
	// McpBadge Content Type.
	// The MCP content representation following a defined schema
	// The schema is defined in the MCP specification as the MCPServer type
	CredentialContentType_CREDENTIAL_CONTENT_TYPE_MCP_BADGE CredentialContentType = 2
)

// Enum value maps for CredentialContentType.
var (
	CredentialContentType_name = map[int32]string{
		0: "CREDENTIAL_CONTENT_TYPE_UNSPECIFIED",
		1: "CREDENTIAL_CONTENT_TYPE_AGENT_BADGE",
		2: "CREDENTIAL_CONTENT_TYPE_MCP_BADGE",
	}
	CredentialContentType_value = map[string]int32{
		"CREDENTIAL_CONTENT_TYPE_UNSPECIFIED": 0,
		"CREDENTIAL_CONTENT_TYPE_AGENT_BADGE": 1,
		"CREDENTIAL_CONTENT_TYPE_MCP_BADGE":   2,
	}
)

func (x CredentialContentType) Enum() *CredentialContentType {
	p := new(CredentialContentType)
	*p = x
	return p
}

func (x CredentialContentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialContentType) Descriptor() protoreflect.EnumDescriptor {
	return file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes[0].Descriptor()
}

func (CredentialContentType) Type() protoreflect.EnumType {
	return &file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes[0]
}

func (x CredentialContentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CredentialContentType.Descriptor instead.
func (CredentialContentType) EnumDescriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{0}
}

// The Envelope Type of the Credential.
// Multiple envelope types can be supported: Embedded Proof, JOSE, COSE etc.
type CredentialEnvelopeType int32

const (
	// Unspecified Envelope Type.
	CredentialEnvelopeType_CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED CredentialEnvelopeType = 0
	// Embedded Proof Envelope Type.
	CredentialEnvelopeType_CREDENTIAL_ENVELOPE_TYPE_EMBEDDED_PROOF CredentialEnvelopeType = 1
	// JOSE Envelope Type.
	CredentialEnvelopeType_CREDENTIAL_ENVELOPE_TYPE_JOSE CredentialEnvelopeType = 2
)

// Enum value maps for CredentialEnvelopeType.
var (
	CredentialEnvelopeType_name = map[int32]string{
		0: "CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED",
		1: "CREDENTIAL_ENVELOPE_TYPE_EMBEDDED_PROOF",
		2: "CREDENTIAL_ENVELOPE_TYPE_JOSE",
	}
	CredentialEnvelopeType_value = map[string]int32{
		"CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED":    0,
		"CREDENTIAL_ENVELOPE_TYPE_EMBEDDED_PROOF": 1,
		"CREDENTIAL_ENVELOPE_TYPE_JOSE":           2,
	}
)

func (x CredentialEnvelopeType) Enum() *CredentialEnvelopeType {
	p := new(CredentialEnvelopeType)
	*p = x
	return p
}

func (x CredentialEnvelopeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CredentialEnvelopeType) Descriptor() protoreflect.EnumDescriptor {
	return file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes[1].Descriptor()
}

func (CredentialEnvelopeType) Type() protoreflect.EnumType {
	return &file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes[1]
}

func (x CredentialEnvelopeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CredentialEnvelopeType.Descriptor instead.
func (CredentialEnvelopeType) EnumDescriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{1}
}

// BadgeClaims represents the content of a Badge VC defined [here]
//
// [here]: https://spec.identity.agntcy.org/docs/vc/intro/
type BadgeClaims struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The ID as defined [here]
	//
	// [here]: https://www.w3.org/TR/vc-data-model/#credential-subject
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The content of the badge
	Badge         *string `protobuf:"bytes,2,opt,name=badge,proto3,oneof" json:"badge,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BadgeClaims) Reset() {
	*x = BadgeClaims{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BadgeClaims) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BadgeClaims) ProtoMessage() {}

func (x *BadgeClaims) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BadgeClaims.ProtoReflect.Descriptor instead.
func (*BadgeClaims) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{0}
}

func (x *BadgeClaims) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *BadgeClaims) GetBadge() string {
	if x != nil && x.Badge != nil {
		return *x.Badge
	}
	return ""
}

// CredentialContent represents the content of a Verifiable Credential.
type CredentialContent struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type specifies the type of the content of the credential.
	ContentType *CredentialContentType `protobuf:"varint,1,opt,name=content_type,json=contentType,proto3,enum=agntcy.identity.core.v1alpha1.CredentialContentType,oneof" json:"content_type,omitempty"`
	// The content representation in JSON-LD format.
	Content       *structpb.Struct `protobuf:"bytes,2,opt,name=content,proto3,oneof" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialContent) Reset() {
	*x = CredentialContent{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialContent) ProtoMessage() {}

func (x *CredentialContent) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialContent.ProtoReflect.Descriptor instead.
func (*CredentialContent) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{1}
}

func (x *CredentialContent) GetContentType() CredentialContentType {
	if x != nil && x.ContentType != nil {
		return *x.ContentType
	}
	return CredentialContentType_CREDENTIAL_CONTENT_TYPE_UNSPECIFIED
}

func (x *CredentialContent) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

// CredentialSchema represents the credentialSchema property of a Verifiable Credential.
// more information can be found [here]
//
// [here]: https://www.w3.org/TR/vc-data-model-2.0/#data-schemas
type CredentialSchema struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Type specifies the type of the file
	Type *string `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// The URL identifying the schema file
	Id            *string `protobuf:"bytes,2,opt,name=id,proto3,oneof" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CredentialSchema) Reset() {
	*x = CredentialSchema{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CredentialSchema) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CredentialSchema) ProtoMessage() {}

func (x *CredentialSchema) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CredentialSchema.ProtoReflect.Descriptor instead.
func (*CredentialSchema) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{2}
}

func (x *CredentialSchema) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *CredentialSchema) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

// EnvelopedCredential represents a Credential enveloped in a specific format.
type EnvelopedCredential struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// EnvelopeType specifies the type of the envelope used to store the credential.
	EnvelopeType *CredentialEnvelopeType `protobuf:"varint,1,opt,name=envelope_type,json=envelopeType,proto3,enum=agntcy.identity.core.v1alpha1.CredentialEnvelopeType,oneof" json:"envelope_type,omitempty"`
	// Value is the enveloped credential in the specified format.
	Value         *string `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EnvelopedCredential) Reset() {
	*x = EnvelopedCredential{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EnvelopedCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnvelopedCredential) ProtoMessage() {}

func (x *EnvelopedCredential) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnvelopedCredential.ProtoReflect.Descriptor instead.
func (*EnvelopedCredential) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{3}
}

func (x *EnvelopedCredential) GetEnvelopeType() CredentialEnvelopeType {
	if x != nil && x.EnvelopeType != nil {
		return *x.EnvelopeType
	}
	return CredentialEnvelopeType_CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED
}

func (x *EnvelopedCredential) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

// A data integrity proof provides information about the proof mechanism,
// parameters required to verify that proof, and the proof value itself.
type Proof struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// The type of the proof
	Type *string `protobuf:"bytes,1,opt,name=type,proto3,oneof" json:"type,omitempty"`
	// The proof purpose
	ProofPurpose *string `protobuf:"bytes,2,opt,name=proof_purpose,json=proofPurpose,proto3,oneof" json:"proof_purpose,omitempty"`
	// The proof value
	ProofValue    *string `protobuf:"bytes,3,opt,name=proof_value,json=proofValue,proto3,oneof" json:"proof_value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Proof) Reset() {
	*x = Proof{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Proof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Proof) ProtoMessage() {}

func (x *Proof) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Proof.ProtoReflect.Descriptor instead.
func (*Proof) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{4}
}

func (x *Proof) GetType() string {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return ""
}

func (x *Proof) GetProofPurpose() string {
	if x != nil && x.ProofPurpose != nil {
		return *x.ProofPurpose
	}
	return ""
}

func (x *Proof) GetProofValue() string {
	if x != nil && x.ProofValue != nil {
		return *x.ProofValue
	}
	return ""
}

// DataModel represents the W3C Verifiable Credential Data Model defined [here]
//
// [here]: https://www.w3.org/TR/vc-data-model/
type VerifiableCredential struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// https://www.w3.org/TR/vc-data-model/#contexts
	Context []string `protobuf:"bytes,1,rep,name=context,proto3" json:"context,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#dfn-type
	Type []string `protobuf:"bytes,2,rep,name=type,proto3" json:"type,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#issuer
	Issuer *string `protobuf:"bytes,3,opt,name=issuer,proto3,oneof" json:"issuer,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#credential-subject
	Content *structpb.Struct `protobuf:"bytes,4,opt,name=content,proto3,oneof" json:"content,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#identifiers
	Id *string `protobuf:"bytes,5,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#issuance-date
	IssuanceDate *string `protobuf:"bytes,6,opt,name=issuance_date,json=issuanceDate,proto3,oneof" json:"issuance_date,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#expiration
	ExpirationDate *string `protobuf:"bytes,7,opt,name=expiration_date,json=expirationDate,proto3,oneof" json:"expiration_date,omitempty"`
	// https://www.w3.org/TR/vc-data-model-2.0/#data-schemas
	CredentialSchema []*CredentialSchema `protobuf:"bytes,8,rep,name=credential_schema,json=credentialSchema,proto3" json:"credential_schema,omitempty"`
	// https://w3id.org/security#proof
	Proof         *Proof `protobuf:"bytes,9,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifiableCredential) Reset() {
	*x = VerifiableCredential{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifiableCredential) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifiableCredential) ProtoMessage() {}

func (x *VerifiableCredential) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifiableCredential.ProtoReflect.Descriptor instead.
func (*VerifiableCredential) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{5}
}

func (x *VerifiableCredential) GetContext() []string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *VerifiableCredential) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *VerifiableCredential) GetIssuer() string {
	if x != nil && x.Issuer != nil {
		return *x.Issuer
	}
	return ""
}

func (x *VerifiableCredential) GetContent() *structpb.Struct {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *VerifiableCredential) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *VerifiableCredential) GetIssuanceDate() string {
	if x != nil && x.IssuanceDate != nil {
		return *x.IssuanceDate
	}
	return ""
}

func (x *VerifiableCredential) GetExpirationDate() string {
	if x != nil && x.ExpirationDate != nil {
		return *x.ExpirationDate
	}
	return ""
}

func (x *VerifiableCredential) GetCredentialSchema() []*CredentialSchema {
	if x != nil {
		return x.CredentialSchema
	}
	return nil
}

func (x *VerifiableCredential) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

// DataModel represents the W3C Verifiable Presentation Data Model defined [here]
//
// [here]: https://www.w3.org/TR/vc-data-model/
type VerifiablePresentation struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// https://www.w3.org/TR/vc-data-model/#contexts
	Context []string `protobuf:"bytes,1,rep,name=context,proto3" json:"context,omitempty"`
	// https://www.w3.org/TR/vc-data-model/#dfn-type
	Type []string `protobuf:"bytes,2,rep,name=type,proto3" json:"type,omitempty"`
	// https://www.w3.org/2018/credentials#verifiableCredential
	VerifiableCredential []*VerifiableCredential `protobuf:"bytes,3,rep,name=verifiable_credential,json=verifiableCredential,proto3" json:"verifiable_credential,omitempty"`
	// https://w3id.org/security#proof
	Proof         *Proof `protobuf:"bytes,4,opt,name=proof,proto3,oneof" json:"proof,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifiablePresentation) Reset() {
	*x = VerifiablePresentation{}
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifiablePresentation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifiablePresentation) ProtoMessage() {}

func (x *VerifiablePresentation) ProtoReflect() protoreflect.Message {
	mi := &file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifiablePresentation.ProtoReflect.Descriptor instead.
func (*VerifiablePresentation) Descriptor() ([]byte, []int) {
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP(), []int{6}
}

func (x *VerifiablePresentation) GetContext() []string {
	if x != nil {
		return x.Context
	}
	return nil
}

func (x *VerifiablePresentation) GetType() []string {
	if x != nil {
		return x.Type
	}
	return nil
}

func (x *VerifiablePresentation) GetVerifiableCredential() []*VerifiableCredential {
	if x != nil {
		return x.VerifiableCredential
	}
	return nil
}

func (x *VerifiablePresentation) GetProof() *Proof {
	if x != nil {
		return x.Proof
	}
	return nil
}

var File_agntcy_identity_core_v1alpha1_vc_proto protoreflect.FileDescriptor

const file_agntcy_identity_core_v1alpha1_vc_proto_rawDesc = "" +
	"\n" +
	"&agntcy/identity-saas/core/v1alpha1/vc.proto\x12\x1dagntcy.identity.core.v1alpha1\x1a\x1cgoogle/protobuf/struct.proto\"N\n" +
	"\vBadgeClaims\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x19\n" +
	"\x05badge\x18\x02 \x01(\tH\x01R\x05badge\x88\x01\x01B\x05\n" +
	"\x03_idB\b\n" +
	"\x06_badge\"\xc6\x01\n" +
	"\x11CredentialContent\x12\\\n" +
	"\fcontent_type\x18\x01 \x01(\x0e24.agntcy.identity.core.v1alpha1.CredentialContentTypeH\x00R\vcontentType\x88\x01\x01\x126\n" +
	"\acontent\x18\x02 \x01(\v2\x17.google.protobuf.StructH\x01R\acontent\x88\x01\x01B\x0f\n" +
	"\r_content_typeB\n" +
	"\n" +
	"\b_content\"P\n" +
	"\x10CredentialSchema\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12\x13\n" +
	"\x02id\x18\x02 \x01(\tH\x01R\x02id\x88\x01\x01B\a\n" +
	"\x05_typeB\x05\n" +
	"\x03_id\"\xad\x01\n" +
	"\x13EnvelopedCredential\x12_\n" +
	"\renvelope_type\x18\x01 \x01(\x0e25.agntcy.identity.core.v1alpha1.CredentialEnvelopeTypeH\x00R\fenvelopeType\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x01R\x05value\x88\x01\x01B\x10\n" +
	"\x0e_envelope_typeB\b\n" +
	"\x06_value\"\x9b\x01\n" +
	"\x05Proof\x12\x17\n" +
	"\x04type\x18\x01 \x01(\tH\x00R\x04type\x88\x01\x01\x12(\n" +
	"\rproof_purpose\x18\x02 \x01(\tH\x01R\fproofPurpose\x88\x01\x01\x12$\n" +
	"\vproof_value\x18\x03 \x01(\tH\x02R\n" +
	"proofValue\x88\x01\x01B\a\n" +
	"\x05_typeB\x10\n" +
	"\x0e_proof_purposeB\x0e\n" +
	"\f_proof_value\"\xf3\x03\n" +
	"\x14VerifiableCredential\x12\x18\n" +
	"\acontext\x18\x01 \x03(\tR\acontext\x12\x12\n" +
	"\x04type\x18\x02 \x03(\tR\x04type\x12\x1b\n" +
	"\x06issuer\x18\x03 \x01(\tH\x00R\x06issuer\x88\x01\x01\x126\n" +
	"\acontent\x18\x04 \x01(\v2\x17.google.protobuf.StructH\x01R\acontent\x88\x01\x01\x12\x13\n" +
	"\x02id\x18\x05 \x01(\tH\x02R\x02id\x88\x01\x01\x12(\n" +
	"\rissuance_date\x18\x06 \x01(\tH\x03R\fissuanceDate\x88\x01\x01\x12,\n" +
	"\x0fexpiration_date\x18\a \x01(\tH\x04R\x0eexpirationDate\x88\x01\x01\x12\\\n" +
	"\x11credential_schema\x18\b \x03(\v2/.agntcy.identity.core.v1alpha1.CredentialSchemaR\x10credentialSchema\x12?\n" +
	"\x05proof\x18\t \x01(\v2$.agntcy.identity.core.v1alpha1.ProofH\x05R\x05proof\x88\x01\x01B\t\n" +
	"\a_issuerB\n" +
	"\n" +
	"\b_contentB\x05\n" +
	"\x03_idB\x10\n" +
	"\x0e_issuance_dateB\x12\n" +
	"\x10_expiration_dateB\b\n" +
	"\x06_proof\"\xfb\x01\n" +
	"\x16VerifiablePresentation\x12\x18\n" +
	"\acontext\x18\x01 \x03(\tR\acontext\x12\x12\n" +
	"\x04type\x18\x02 \x03(\tR\x04type\x12h\n" +
	"\x15verifiable_credential\x18\x03 \x03(\v23.agntcy.identity.core.v1alpha1.VerifiableCredentialR\x14verifiableCredential\x12?\n" +
	"\x05proof\x18\x04 \x01(\v2$.agntcy.identity.core.v1alpha1.ProofH\x00R\x05proof\x88\x01\x01B\b\n" +
	"\x06_proof*\x90\x01\n" +
	"\x15CredentialContentType\x12'\n" +
	"#CREDENTIAL_CONTENT_TYPE_UNSPECIFIED\x10\x00\x12'\n" +
	"#CREDENTIAL_CONTENT_TYPE_AGENT_BADGE\x10\x01\x12%\n" +
	"!CREDENTIAL_CONTENT_TYPE_MCP_BADGE\x10\x02*\x92\x01\n" +
	"\x16CredentialEnvelopeType\x12(\n" +
	"$CREDENTIAL_ENVELOPE_TYPE_UNSPECIFIED\x10\x00\x12+\n" +
	"'CREDENTIAL_ENVELOPE_TYPE_EMBEDDED_PROOF\x10\x01\x12!\n" +
	"\x1dCREDENTIAL_ENVELOPE_TYPE_JOSE\x10\x02BZZXgithub.com/agntcy/identity-saas/api/server/agntcy/identity-saas/core/v1alpha1;identity_core_sdk_gob\x06proto3"

var (
	file_agntcy_identity_core_v1alpha1_vc_proto_rawDescOnce sync.Once
	file_agntcy_identity_core_v1alpha1_vc_proto_rawDescData []byte
)

func file_agntcy_identity_core_v1alpha1_vc_proto_rawDescGZIP() []byte {
	file_agntcy_identity_core_v1alpha1_vc_proto_rawDescOnce.Do(func() {
		file_agntcy_identity_core_v1alpha1_vc_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_agntcy_identity_core_v1alpha1_vc_proto_rawDesc), len(file_agntcy_identity_core_v1alpha1_vc_proto_rawDesc)))
	})
	return file_agntcy_identity_core_v1alpha1_vc_proto_rawDescData
}

var file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_agntcy_identity_core_v1alpha1_vc_proto_goTypes = []any{
	(CredentialContentType)(0),     // 0: agntcy.identity.core.v1alpha1.CredentialContentType
	(CredentialEnvelopeType)(0),    // 1: agntcy.identity.core.v1alpha1.CredentialEnvelopeType
	(*BadgeClaims)(nil),            // 2: agntcy.identity.core.v1alpha1.BadgeClaims
	(*CredentialContent)(nil),      // 3: agntcy.identity.core.v1alpha1.CredentialContent
	(*CredentialSchema)(nil),       // 4: agntcy.identity.core.v1alpha1.CredentialSchema
	(*EnvelopedCredential)(nil),    // 5: agntcy.identity.core.v1alpha1.EnvelopedCredential
	(*Proof)(nil),                  // 6: agntcy.identity.core.v1alpha1.Proof
	(*VerifiableCredential)(nil),   // 7: agntcy.identity.core.v1alpha1.VerifiableCredential
	(*VerifiablePresentation)(nil), // 8: agntcy.identity.core.v1alpha1.VerifiablePresentation
	(*structpb.Struct)(nil),        // 9: google.protobuf.Struct
}
var file_agntcy_identity_core_v1alpha1_vc_proto_depIdxs = []int32{
	0, // 0: agntcy.identity.core.v1alpha1.CredentialContent.content_type:type_name -> agntcy.identity.core.v1alpha1.CredentialContentType
	9, // 1: agntcy.identity.core.v1alpha1.CredentialContent.content:type_name -> google.protobuf.Struct
	1, // 2: agntcy.identity.core.v1alpha1.EnvelopedCredential.envelope_type:type_name -> agntcy.identity.core.v1alpha1.CredentialEnvelopeType
	9, // 3: agntcy.identity.core.v1alpha1.VerifiableCredential.content:type_name -> google.protobuf.Struct
	4, // 4: agntcy.identity.core.v1alpha1.VerifiableCredential.credential_schema:type_name -> agntcy.identity.core.v1alpha1.CredentialSchema
	6, // 5: agntcy.identity.core.v1alpha1.VerifiableCredential.proof:type_name -> agntcy.identity.core.v1alpha1.Proof
	7, // 6: agntcy.identity.core.v1alpha1.VerifiablePresentation.verifiable_credential:type_name -> agntcy.identity.core.v1alpha1.VerifiableCredential
	6, // 7: agntcy.identity.core.v1alpha1.VerifiablePresentation.proof:type_name -> agntcy.identity.core.v1alpha1.Proof
	8, // [8:8] is the sub-list for method output_type
	8, // [8:8] is the sub-list for method input_type
	8, // [8:8] is the sub-list for extension type_name
	8, // [8:8] is the sub-list for extension extendee
	0, // [0:8] is the sub-list for field type_name
}

func init() { file_agntcy_identity_core_v1alpha1_vc_proto_init() }
func file_agntcy_identity_core_v1alpha1_vc_proto_init() {
	if File_agntcy_identity_core_v1alpha1_vc_proto != nil {
		return
	}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[0].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[1].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[2].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[3].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[4].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[5].OneofWrappers = []any{}
	file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes[6].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_agntcy_identity_core_v1alpha1_vc_proto_rawDesc), len(file_agntcy_identity_core_v1alpha1_vc_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_agntcy_identity_core_v1alpha1_vc_proto_goTypes,
		DependencyIndexes: file_agntcy_identity_core_v1alpha1_vc_proto_depIdxs,
		EnumInfos:         file_agntcy_identity_core_v1alpha1_vc_proto_enumTypes,
		MessageInfos:      file_agntcy_identity_core_v1alpha1_vc_proto_msgTypes,
	}.Build()
	File_agntcy_identity_core_v1alpha1_vc_proto = out.File
	file_agntcy_identity_core_v1alpha1_vc_proto_goTypes = nil
	file_agntcy_identity_core_v1alpha1_vc_proto_depIdxs = nil
}
