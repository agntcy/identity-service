// This file was autogenerated by go-to-protobuf. Do not edit it manually!

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: outshift/identity/service/v1alpha1/auth.proto

package identity_service_sdk_go

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Identity Service Session
type Session struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for the Session.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The owner application ID for which the Session is created.
	OwnerAppId *string `protobuf:"bytes,2,opt,name=owner_app_id,json=ownerAppId,proto3,oneof" json:"owner_app_id,omitempty"`
	// The application ID associated with the Session.
	AppId *string `protobuf:"bytes,3,opt,name=app_id,json=appId,proto3,oneof" json:"app_id,omitempty"`
	// The tool name associated with the Session.
	ToolName *string `protobuf:"bytes,4,opt,name=tool_name,json=toolName,proto3,oneof" json:"tool_name,omitempty"`
	// The user ID associated with the Session.
	UserId *string `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3,oneof" json:"user_id,omitempty"`
	// The access token associated with the Session.
	AccessToken *string `protobuf:"bytes,6,opt,name=access_token,json=accessToken,proto3,oneof" json:"access_token,omitempty"`
	// The authorization code associated with the Session.
	Code *string `protobuf:"bytes,7,opt,name=code,proto3,oneof" json:"code,omitempty"`
	// The creation time of the Session.
	CreatedAt *int64 `protobuf:"varint,8,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	// The expiration time of the Session.
	ExpiresAt     *int64 `protobuf:"varint,9,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Session) Reset() {
	*x = Session{}
	mi := &file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Session) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Session) ProtoMessage() {}

func (x *Session) ProtoReflect() protoreflect.Message {
	mi := &file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Session.ProtoReflect.Descriptor instead.
func (*Session) Descriptor() ([]byte, []int) {
	return file_outshift_identity_service_v1alpha1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *Session) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Session) GetOwnerAppId() string {
	if x != nil && x.OwnerAppId != nil {
		return *x.OwnerAppId
	}
	return ""
}

func (x *Session) GetAppId() string {
	if x != nil && x.AppId != nil {
		return *x.AppId
	}
	return ""
}

func (x *Session) GetToolName() string {
	if x != nil && x.ToolName != nil {
		return *x.ToolName
	}
	return ""
}

func (x *Session) GetUserId() string {
	if x != nil && x.UserId != nil {
		return *x.UserId
	}
	return ""
}

func (x *Session) GetAccessToken() string {
	if x != nil && x.AccessToken != nil {
		return *x.AccessToken
	}
	return ""
}

func (x *Session) GetCode() string {
	if x != nil && x.Code != nil {
		return *x.Code
	}
	return ""
}

func (x *Session) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *Session) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

type SessionDeviceOTP struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// A unique identifier for the OTP.
	Id *string `protobuf:"bytes,1,opt,name=id,proto3,oneof" json:"id,omitempty"`
	// The value of the OTP.
	Value *string `protobuf:"bytes,2,opt,name=value,proto3,oneof" json:"value,omitempty"`
	// The Session that the OTP is generated for.
	SessionId *string `protobuf:"bytes,3,opt,name=session_id,json=sessionId,proto3,oneof" json:"session_id,omitempty"`
	// The Device that the OTP is generated for.
	DeviceId *string `protobuf:"bytes,4,opt,name=device_id,json=deviceId,proto3,oneof" json:"device_id,omitempty"`
	// The creation time of the OTP.
	CreatedAt *int64 `protobuf:"varint,5,opt,name=created_at,json=createdAt,proto3,oneof" json:"created_at,omitempty"`
	// The update time of the OTP.
	UpdatedAt *int64 `protobuf:"varint,6,opt,name=updated_at,json=updatedAt,proto3,oneof" json:"updated_at,omitempty"`
	// The expiration time of the OTP.
	ExpiresAt *int64 `protobuf:"varint,7,opt,name=expires_at,json=expiresAt,proto3,oneof" json:"expires_at,omitempty"`
	// A field that tells whether the OTP is approved or denied.
	Approved *bool `protobuf:"varint,8,opt,name=approved,proto3,oneof" json:"approved,omitempty"`
	// A field that tells whether the TOP is used or not.
	Used          *bool `protobuf:"varint,9,opt,name=used,proto3,oneof" json:"used,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionDeviceOTP) Reset() {
	*x = SessionDeviceOTP{}
	mi := &file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionDeviceOTP) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionDeviceOTP) ProtoMessage() {}

func (x *SessionDeviceOTP) ProtoReflect() protoreflect.Message {
	mi := &file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionDeviceOTP.ProtoReflect.Descriptor instead.
func (*SessionDeviceOTP) Descriptor() ([]byte, []int) {
	return file_outshift_identity_service_v1alpha1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *SessionDeviceOTP) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *SessionDeviceOTP) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *SessionDeviceOTP) GetSessionId() string {
	if x != nil && x.SessionId != nil {
		return *x.SessionId
	}
	return ""
}

func (x *SessionDeviceOTP) GetDeviceId() string {
	if x != nil && x.DeviceId != nil {
		return *x.DeviceId
	}
	return ""
}

func (x *SessionDeviceOTP) GetCreatedAt() int64 {
	if x != nil && x.CreatedAt != nil {
		return *x.CreatedAt
	}
	return 0
}

func (x *SessionDeviceOTP) GetUpdatedAt() int64 {
	if x != nil && x.UpdatedAt != nil {
		return *x.UpdatedAt
	}
	return 0
}

func (x *SessionDeviceOTP) GetExpiresAt() int64 {
	if x != nil && x.ExpiresAt != nil {
		return *x.ExpiresAt
	}
	return 0
}

func (x *SessionDeviceOTP) GetApproved() bool {
	if x != nil && x.Approved != nil {
		return *x.Approved
	}
	return false
}

func (x *SessionDeviceOTP) GetUsed() bool {
	if x != nil && x.Used != nil {
		return *x.Used
	}
	return false
}

var File_outshift_identity_service_v1alpha1_auth_proto protoreflect.FileDescriptor

const file_outshift_identity_service_v1alpha1_auth_proto_rawDesc = "" +
	"\n" +
	"-outshift/identity/service/v1alpha1/auth.proto\x12\"outshift.identity.service.v1alpha1\"\x9f\x03\n" +
	"\aSession\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12%\n" +
	"\fowner_app_id\x18\x02 \x01(\tH\x01R\n" +
	"ownerAppId\x88\x01\x01\x12\x1a\n" +
	"\x06app_id\x18\x03 \x01(\tH\x02R\x05appId\x88\x01\x01\x12 \n" +
	"\ttool_name\x18\x04 \x01(\tH\x03R\btoolName\x88\x01\x01\x12\x1c\n" +
	"\auser_id\x18\x05 \x01(\tH\x04R\x06userId\x88\x01\x01\x12&\n" +
	"\faccess_token\x18\x06 \x01(\tH\x05R\vaccessToken\x88\x01\x01\x12\x17\n" +
	"\x04code\x18\a \x01(\tH\x06R\x04code\x88\x01\x01\x12\"\n" +
	"\n" +
	"created_at\x18\b \x01(\x03H\aR\tcreatedAt\x88\x01\x01\x12\"\n" +
	"\n" +
	"expires_at\x18\t \x01(\x03H\bR\texpiresAt\x88\x01\x01B\x05\n" +
	"\x03_idB\x0f\n" +
	"\r_owner_app_idB\t\n" +
	"\a_app_idB\f\n" +
	"\n" +
	"_tool_nameB\n" +
	"\n" +
	"\b_user_idB\x0f\n" +
	"\r_access_tokenB\a\n" +
	"\x05_codeB\r\n" +
	"\v_created_atB\r\n" +
	"\v_expires_at\"\x9f\x03\n" +
	"\x10SessionDeviceOTP\x12\x13\n" +
	"\x02id\x18\x01 \x01(\tH\x00R\x02id\x88\x01\x01\x12\x19\n" +
	"\x05value\x18\x02 \x01(\tH\x01R\x05value\x88\x01\x01\x12\"\n" +
	"\n" +
	"session_id\x18\x03 \x01(\tH\x02R\tsessionId\x88\x01\x01\x12 \n" +
	"\tdevice_id\x18\x04 \x01(\tH\x03R\bdeviceId\x88\x01\x01\x12\"\n" +
	"\n" +
	"created_at\x18\x05 \x01(\x03H\x04R\tcreatedAt\x88\x01\x01\x12\"\n" +
	"\n" +
	"updated_at\x18\x06 \x01(\x03H\x05R\tupdatedAt\x88\x01\x01\x12\"\n" +
	"\n" +
	"expires_at\x18\a \x01(\x03H\x06R\texpiresAt\x88\x01\x01\x12\x1f\n" +
	"\bapproved\x18\b \x01(\bH\aR\bapproved\x88\x01\x01\x12\x17\n" +
	"\x04used\x18\t \x01(\bH\bR\x04used\x88\x01\x01B\x05\n" +
	"\x03_idB\b\n" +
	"\x06_valueB\r\n" +
	"\v_session_idB\f\n" +
	"\n" +
	"_device_idB\r\n" +
	"\v_created_atB\r\n" +
	"\v_updated_atB\r\n" +
	"\v_expires_atB\v\n" +
	"\t_approvedB\a\n" +
	"\x05_usedBlZjgithub.com/outshift/identity-service/api/server/outshift/identity/service/v1alpha1;identity_service_sdk_gob\x06proto3"

var (
	file_outshift_identity_service_v1alpha1_auth_proto_rawDescOnce sync.Once
	file_outshift_identity_service_v1alpha1_auth_proto_rawDescData []byte
)

func file_outshift_identity_service_v1alpha1_auth_proto_rawDescGZIP() []byte {
	file_outshift_identity_service_v1alpha1_auth_proto_rawDescOnce.Do(func() {
		file_outshift_identity_service_v1alpha1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_outshift_identity_service_v1alpha1_auth_proto_rawDesc), len(file_outshift_identity_service_v1alpha1_auth_proto_rawDesc)))
	})
	return file_outshift_identity_service_v1alpha1_auth_proto_rawDescData
}

var file_outshift_identity_service_v1alpha1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_outshift_identity_service_v1alpha1_auth_proto_goTypes = []any{
	(*Session)(nil),          // 0: outshift.identity.service.v1alpha1.Session
	(*SessionDeviceOTP)(nil), // 1: outshift.identity.service.v1alpha1.SessionDeviceOTP
}
var file_outshift_identity_service_v1alpha1_auth_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_outshift_identity_service_v1alpha1_auth_proto_init() }
func file_outshift_identity_service_v1alpha1_auth_proto_init() {
	if File_outshift_identity_service_v1alpha1_auth_proto != nil {
		return
	}
	file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[0].OneofWrappers = []any{}
	file_outshift_identity_service_v1alpha1_auth_proto_msgTypes[1].OneofWrappers = []any{}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_outshift_identity_service_v1alpha1_auth_proto_rawDesc), len(file_outshift_identity_service_v1alpha1_auth_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_outshift_identity_service_v1alpha1_auth_proto_goTypes,
		DependencyIndexes: file_outshift_identity_service_v1alpha1_auth_proto_depIdxs,
		MessageInfos:      file_outshift_identity_service_v1alpha1_auth_proto_msgTypes,
	}.Build()
	File_outshift_identity_service_v1alpha1_auth_proto = out.File
	file_outshift_identity_service_v1alpha1_auth_proto_goTypes = nil
	file_outshift_identity_service_v1alpha1_auth_proto_depIdxs = nil
}
