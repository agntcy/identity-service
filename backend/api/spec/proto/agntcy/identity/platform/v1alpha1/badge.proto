// Copyright 2025 Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto3";

package agntcy.identity.platform.v1alpha1;

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/identity-platform/api/server/agntcy/identity/platform/v1alpha1;identity_platform_sdk_go";

message Badge {
  optional VerifiableCredential verifiable_credential = 1;

  optional string app_id = 2;
}

// BadgeClaims represents the content of a Badge VC defined [here]
//
// [here]: https://spec.identity.agntcy.org/docs/vc/intro/
message BadgeClaims {
  // The ID as defined [here]
  //
  // [here]: https://www.w3.org/TR/vc-data-model/#credential-subject
  optional string id = 1;

  // The content of the badge
  optional string badge = 2;
}

// CredentialSchema represents the credentialSchema property of a Verifiable Credential.
// more information can be found [here]
//
// [here]: https://www.w3.org/TR/vc-data-model-2.0/#data-schemas
message CredentialSchema {
  // Type specifies the type of the file
  optional string type = 1;

  // The URL identifying the schema file
  optional string id = 2;
}

// A data integrity proof provides information about the proof mechanism,
// parameters required to verify that proof, and the proof value itself.
message Proof {
  // The type of the proof
  optional string type = 1;

  // The proof purpose
  optional string proof_purpose = 2;

  // The proof value
  optional string proof_value = 3;
}

// DataModel represents the W3C Verifiable Credential Data Model defined [here]
//
// [here]: https://www.w3.org/TR/vc-data-model/
message VerifiableCredential {
  // https://www.w3.org/TR/vc-data-model/#contexts
  repeated string context = 1;

  // https://www.w3.org/TR/vc-data-model/#dfn-type
  repeated string type = 2;

  // https://www.w3.org/TR/vc-data-model/#issuer
  optional string issuer = 3;

  // https://www.w3.org/TR/vc-data-model/#credential-subject
  optional BadgeClaims credential_subject = 4;

  // https://www.w3.org/TR/vc-data-model/#identifiers
  optional string id = 5;

  // https://www.w3.org/TR/vc-data-model/#issuance-date
  optional string issuance_date = 6;

  // https://www.w3.org/TR/vc-data-model/#expiration
  optional string expiration_date = 7;

  // https://www.w3.org/TR/vc-data-model-2.0/#data-schemas
  repeated CredentialSchema credential_schema = 8;

  // https://w3id.org/security#proof
  optional Proof proof = 9;
}

// The content of the Credential.
// Multiple content types can be supported: AgentBadge, etc.
enum BadgeType {
  // Unspecified Content Type.
  BADGE_TYPE_UNSPECIFIED = 0;
  // AgentBadge Content Type.
  // The Agent content representation following a defined schema
  // OASF: https://schema.oasf.agntcy.org/schema/objects/agent
  // Google A2A: https://github.com/google/A2A/blob/main/specification/json/a2a.json
  BADGE_TYPE_AGENT_BADGE = 1;
  // McpBadge Content Type.
  // The MCP content representation following a defined schema
  // The schema is defined in the MCP specification as the MCPServer type
  BADGE_TYPE_MCP_BADGE = 2;
}
