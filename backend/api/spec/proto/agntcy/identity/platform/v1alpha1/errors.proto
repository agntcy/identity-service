// Copyright 2025 Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto3";

package agntcy.identity.platform.v1alpha1;

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/identity-platform/api/server/agntcy/identity/platform/v1alpha1;identity_platform_sdk_go";

// Describes the cause of the error with structured details.
message ErrorInfo {
  // The reason of the error, as defined by the ErrorReason enum.
  // This is a constant unique value that helps identify the cause of
  // the error.
  optional ErrorReason reason = 1;

  // The message describing the error in a human-readable way. This
  // field gives additional details about the error.
  optional string message = 2;
}

// Represents the reason for an error, providing a unique
// constant value for the error.
enum ErrorReason {
  // ERROR_REASON_UNSPECIFIED indicates that no specific error reason
  // has been specified.
  ERROR_REASON_UNSPECIFIED = 0;
  // An internal error, this happens in case of unexpected condition or failure within the service
  ERROR_REASON_INTERNAL = 1;
  // The credential envelope type is invalid. For valid values refer to
  // the enum CredentialEnvelopeType.
  ERROR_REASON_INVALID_CREDENTIAL_ENVELOPE_TYPE = 2;
  // The credential envelope value format does not correspond to the format
  // specified in envelope_type.
  ERROR_REASON_INVALID_CREDENTIAL_ENVELOPE_VALUE_FORMAT = 3;
  // The issuer contains one or more invalid fields.
  ERROR_REASON_INVALID_ISSUER = 4;
  // The issuer is not registered in the Node.
  ERROR_REASON_ISSUER_NOT_REGISTERED = 5;
  // The Verifiable Credential is invalid, this can be related to either
  // invalid format or unable to verify the Data Integrity proof.
  ERROR_REASON_INVALID_VERIFIABLE_CREDENTIAL = 6;
  // The Identity Provider (IdP) is required for the operation, but it is not provided.
  ERROR_REASON_IDP_REQUIRED = 7;
  // The proof is invalid
  ERROR_REASON_INVALID_PROOF = 8;
  // The proof type is not supported
  ERROR_REASON_UNSUPPORTED_PROOF = 9;
  // Unable to resolve an ID to a ResolverMetadata
  ERROR_REASON_RESOLVER_METADATA_NOT_FOUND = 10;
  // Unknown Identity Provider
  ERROR_REASON_UNKNOWN_IDP = 11;
  // The ID and Resolver Metadata are already registered in the system
  ERROR_REASON_ID_ALREADY_REGISTERED = 12;
  // The Verifiable Credential is revoked
  ERROR_REASON_VERIFIABLE_CREDENTIAL_REVOKED = 13;
}
