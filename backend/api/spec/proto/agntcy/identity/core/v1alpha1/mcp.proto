// Copyright 2025 Copyright AGNTCY Contributors (https://github.com/agntcy)
// SPDX-License-Identifier: Apache-2.0

// This file was autogenerated by go-to-protobuf. Do not edit it manually!

syntax = "proto3";

package agntcy.identity.core.v1alpha1;

// Package-wide variables from generator "generated".
option go_package = "github.com/agntcy/identity-saas/api/server/agntcy/identity-saas/core/v1alpha1;identity_core_sdk_go";

// McpResource represents a resource available on the MCP server.
// This can be a file, a database, or any other type of resource.
message McpResource {
  // Name of the resource.
  optional string name = 1;

  // Description of the resource.
  optional string description = 2;

  // URI of the resource.
  optional string uri = 3;
}

// McpServer represents an MCP server that provides a set of tools and resources
// The server needs to be deployed at a specific URL
message McpServer {
  // Name of the server.
  optional string name = 1;

  // Url of the deployed server.
  optional string url = 2;

  // The tools available on the server.
  repeated McpTool tools = 3;

  // The resources available on the server.
  repeated McpResource resources = 4;
}

// McpTool represents a tool available on the MCP server.
// This can be a function with name, description, and parameters.
message McpTool {
  // Name of the tool.
  optional string name = 1;

  // Description of the tool.
  optional string description = 2;

  // Parameters of the tool.
  // This is a JSON object that describes the parameters
  optional string parameters = 3;

  // Oauth2 Protected Resource metadata.
  // This will correspond to a resource on the server.
  // Or can be specified or overridden by the auth policies.
  // This complies with RFC 9728.
  optional Oauth2Metadata oauth2_metadata = 4;
}

// Oauth2Metadata represents the OAuth2 metadata for a protected resource.
// This complies with RFC 9728.
message Oauth2Metadata {
  // The resource identifier.
  optional string resource = 1;

  // Authorization servers for the OAuth2 server.
  // This is a list of strings, such as "https://example.com/oauth2/authorize".
  optional string authorization_servers = 2;

  // Bearer methods supported
  // This is a list of strings, such as "client_credentials" or "authorization_code".
  repeated string bearer_methods_supported = 3;

  // Scopes supported
  // This is a list of strings, such as "openid" or "profile".
  repeated string scopes_supported = 4;
}
