// Code generated by go-swagger; DO NOT EDIT.

package models

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/validate"
)

// V1alpha1AppType App Type
//
// - APP_TYPE_UNSPECIFIED: Unspecified Envelope Type.
//   - APP_TYPE_AGENT_A2A: Agent A2A App Type.
//   - APP_TYPE_AGENT_OASF: Agent OASF App Type.
//   - APP_TYPE_MCP_SERVER: Agent MCP Server App Type.
//
// swagger:model v1alpha1AppType
type V1alpha1AppType string

func NewV1alpha1AppType(value V1alpha1AppType) *V1alpha1AppType {
	return &value
}

// Pointer returns a pointer to a freshly-allocated V1alpha1AppType.
func (m V1alpha1AppType) Pointer() *V1alpha1AppType {
	return &m
}

const (

	// V1alpha1AppTypeAPPTYPEUNSPECIFIED captures enum value "APP_TYPE_UNSPECIFIED"
	V1alpha1AppTypeAPPTYPEUNSPECIFIED V1alpha1AppType = "APP_TYPE_UNSPECIFIED"

	// V1alpha1AppTypeAPPTYPEAGENTA2A captures enum value "APP_TYPE_AGENT_A2A"
	V1alpha1AppTypeAPPTYPEAGENTA2A V1alpha1AppType = "APP_TYPE_AGENT_A2A"

	// V1alpha1AppTypeAPPTYPEAGENTOASF captures enum value "APP_TYPE_AGENT_OASF"
	V1alpha1AppTypeAPPTYPEAGENTOASF V1alpha1AppType = "APP_TYPE_AGENT_OASF"

	// V1alpha1AppTypeAPPTYPEMCPSERVER captures enum value "APP_TYPE_MCP_SERVER"
	V1alpha1AppTypeAPPTYPEMCPSERVER V1alpha1AppType = "APP_TYPE_MCP_SERVER"
)

// for schema
var v1alpha1AppTypeEnum []any

func init() {
	var res []V1alpha1AppType
	if err := json.Unmarshal([]byte(`["APP_TYPE_UNSPECIFIED","APP_TYPE_AGENT_A2A","APP_TYPE_AGENT_OASF","APP_TYPE_MCP_SERVER"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		v1alpha1AppTypeEnum = append(v1alpha1AppTypeEnum, v)
	}
}

func (m V1alpha1AppType) validateV1alpha1AppTypeEnum(path, location string, value V1alpha1AppType) error {
	if err := validate.EnumCase(path, location, value, v1alpha1AppTypeEnum, true); err != nil {
		return err
	}
	return nil
}

// Validate validates this v1alpha1 app type
func (m V1alpha1AppType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateV1alpha1AppTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

// ContextValidate validates this v1alpha1 app type based on context it is used
func (m V1alpha1AppType) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}
