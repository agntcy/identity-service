// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1IssueA2ABadgeRequest v1alpha1 issue a2 a badge request
//
// swagger:model v1alpha1IssueA2ABadgeRequest
type V1alpha1IssueA2ABadgeRequest struct {

	// Or the MCP Schema in a base64 encoded format.
	SchemaBase64 string `json:"schemaBase64,omitempty"`

	// The A2A well_known_url.
	WellKnownURL string `json:"wellKnownUrl,omitempty"`
}

// Validate validates this v1alpha1 issue a2 a badge request
func (m *V1alpha1IssueA2ABadgeRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1alpha1 issue a2 a badge request based on context it is used
func (m *V1alpha1IssueA2ABadgeRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1IssueA2ABadgeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1IssueA2ABadgeRequest) UnmarshalBinary(b []byte) error {
	var res V1alpha1IssueA2ABadgeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
