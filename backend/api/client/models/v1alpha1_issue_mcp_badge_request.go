// Code generated by go-swagger; DO NOT EDIT.

package models

import (
	"context"

	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// V1alpha1IssueMcpBadgeRequest v1alpha1 issue mcp badge request
//
// swagger:model v1alpha1IssueMcpBadgeRequest
type V1alpha1IssueMcpBadgeRequest struct {

	// The MCP badge name.
	Name string `json:"name,omitempty"`

	// Or the MCP Schema in a base64 encoded format.
	SchemaBase64 string `json:"schemaBase64,omitempty"`

	// The MCP badge URL.
	URL string `json:"url,omitempty"`
}

// Validate validates this v1alpha1 issue mcp badge request
func (m *V1alpha1IssueMcpBadgeRequest) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this v1alpha1 issue mcp badge request based on context it is used
func (m *V1alpha1IssueMcpBadgeRequest) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *V1alpha1IssueMcpBadgeRequest) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *V1alpha1IssueMcpBadgeRequest) UnmarshalBinary(b []byte) error {
	var res V1alpha1IssueMcpBadgeRequest
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
