// Code generated by go-swagger; DO NOT EDIT.

package app

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/agntcy/identity-service/backend/api/client/models"
)

// GetTasksReader is a Reader for the GetTasks structure.
type GetTasksReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetTasksReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetTasksOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetTasksDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetTasksOK creates a GetTasksOK with default headers values
func NewGetTasksOK() *GetTasksOK {
	return &GetTasksOK{}
}

/*
GetTasksOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetTasksOK struct {
	Payload *models.V1alpha1GetTasksResponse
}

// IsSuccess returns true when this get tasks o k response has a 2xx status code
func (o *GetTasksOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get tasks o k response has a 3xx status code
func (o *GetTasksOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get tasks o k response has a 4xx status code
func (o *GetTasksOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get tasks o k response has a 5xx status code
func (o *GetTasksOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get tasks o k response a status code equal to that given
func (o *GetTasksOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get tasks o k response
func (o *GetTasksOK) Code() int {
	return 200
}

func (o *GetTasksOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/tasks][%d] getTasksOK %s", 200, payload)
}

func (o *GetTasksOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/tasks][%d] getTasksOK %s", 200, payload)
}

func (o *GetTasksOK) GetPayload() *models.V1alpha1GetTasksResponse {
	return o.Payload
}

func (o *GetTasksOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1GetTasksResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetTasksDefault creates a GetTasksDefault with default headers values
func NewGetTasksDefault(code int) *GetTasksDefault {
	return &GetTasksDefault{
		_statusCode: code,
	}
}

/*
GetTasksDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetTasksDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this get tasks default response has a 2xx status code
func (o *GetTasksDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get tasks default response has a 3xx status code
func (o *GetTasksDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get tasks default response has a 4xx status code
func (o *GetTasksDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get tasks default response has a 5xx status code
func (o *GetTasksDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get tasks default response a status code equal to that given
func (o *GetTasksDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get tasks default response
func (o *GetTasksDefault) Code() int {
	return o._statusCode
}

func (o *GetTasksDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/tasks][%d] GetTasks default %s", o._statusCode, payload)
}

func (o *GetTasksDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/tasks][%d] GetTasks default %s", o._statusCode, payload)
}

func (o *GetTasksDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *GetTasksDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
