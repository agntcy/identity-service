// Code generated by go-swagger; DO NOT EDIT.

package policy

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/agntcy/identity-service/backend/api/client/models"
)

// GetPoliciesCountReader is a Reader for the GetPoliciesCount structure.
type GetPoliciesCountReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetPoliciesCountReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetPoliciesCountOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetPoliciesCountDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetPoliciesCountOK creates a GetPoliciesCountOK with default headers values
func NewGetPoliciesCountOK() *GetPoliciesCountOK {
	return &GetPoliciesCountOK{}
}

/*
GetPoliciesCountOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetPoliciesCountOK struct {
	Payload *models.V1alpha1GetPoliciesCountResponse
}

// IsSuccess returns true when this get policies count o k response has a 2xx status code
func (o *GetPoliciesCountOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get policies count o k response has a 3xx status code
func (o *GetPoliciesCountOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get policies count o k response has a 4xx status code
func (o *GetPoliciesCountOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get policies count o k response has a 5xx status code
func (o *GetPoliciesCountOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get policies count o k response a status code equal to that given
func (o *GetPoliciesCountOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get policies count o k response
func (o *GetPoliciesCountOK) Code() int {
	return 200
}

func (o *GetPoliciesCountOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/all/count][%d] getPoliciesCountOK %s", 200, payload)
}

func (o *GetPoliciesCountOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/all/count][%d] getPoliciesCountOK %s", 200, payload)
}

func (o *GetPoliciesCountOK) GetPayload() *models.V1alpha1GetPoliciesCountResponse {
	return o.Payload
}

func (o *GetPoliciesCountOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1GetPoliciesCountResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetPoliciesCountDefault creates a GetPoliciesCountDefault with default headers values
func NewGetPoliciesCountDefault(code int) *GetPoliciesCountDefault {
	return &GetPoliciesCountDefault{
		_statusCode: code,
	}
}

/*
GetPoliciesCountDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetPoliciesCountDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this get policies count default response has a 2xx status code
func (o *GetPoliciesCountDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get policies count default response has a 3xx status code
func (o *GetPoliciesCountDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get policies count default response has a 4xx status code
func (o *GetPoliciesCountDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get policies count default response has a 5xx status code
func (o *GetPoliciesCountDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get policies count default response a status code equal to that given
func (o *GetPoliciesCountDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get policies count default response
func (o *GetPoliciesCountDefault) Code() int {
	return o._statusCode
}

func (o *GetPoliciesCountDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/all/count][%d] GetPoliciesCount default %s", o._statusCode, payload)
}

func (o *GetPoliciesCountDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/all/count][%d] GetPoliciesCount default %s", o._statusCode, payload)
}

func (o *GetPoliciesCountDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *GetPoliciesCountDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
