// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/outshift/identity-service/api/client/models"
)

// GetRuleReader is a Reader for the GetRule structure.
type GetRuleReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetRuleReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewGetRuleOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetRuleDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetRuleOK creates a GetRuleOK with default headers values
func NewGetRuleOK() *GetRuleOK {
	return &GetRuleOK{}
}

/*
GetRuleOK describes a response with status code 200, with default header values.

A successful response.
*/
type GetRuleOK struct {
	Payload *models.V1alpha1Rule
}

// IsSuccess returns true when this get rule o k response has a 2xx status code
func (o *GetRuleOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this get rule o k response has a 3xx status code
func (o *GetRuleOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this get rule o k response has a 4xx status code
func (o *GetRuleOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this get rule o k response has a 5xx status code
func (o *GetRuleOK) IsServerError() bool {
	return false
}

// IsCode returns true when this get rule o k response a status code equal to that given
func (o *GetRuleOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the get rule o k response
func (o *GetRuleOK) Code() int {
	return 200
}

func (o *GetRuleOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/{policyId}/rules/{ruleId}][%d] getRuleOK %s", 200, payload)
}

func (o *GetRuleOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/{policyId}/rules/{ruleId}][%d] getRuleOK %s", 200, payload)
}

func (o *GetRuleOK) GetPayload() *models.V1alpha1Rule {
	return o.Payload
}

func (o *GetRuleOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1Rule)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewGetRuleDefault creates a GetRuleDefault with default headers values
func NewGetRuleDefault(code int) *GetRuleDefault {
	return &GetRuleDefault{
		_statusCode: code,
	}
}

/*
GetRuleDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type GetRuleDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this get rule default response has a 2xx status code
func (o *GetRuleDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this get rule default response has a 3xx status code
func (o *GetRuleDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this get rule default response has a 4xx status code
func (o *GetRuleDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this get rule default response has a 5xx status code
func (o *GetRuleDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this get rule default response a status code equal to that given
func (o *GetRuleDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the get rule default response
func (o *GetRuleDefault) Code() int {
	return o._statusCode
}

func (o *GetRuleDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/{policyId}/rules/{ruleId}][%d] GetRule default %s", o._statusCode, payload)
}

func (o *GetRuleDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[GET /v1alpha1/policies/{policyId}/rules/{ruleId}][%d] GetRule default %s", o._statusCode, payload)
}

func (o *GetRuleDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *GetRuleDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
