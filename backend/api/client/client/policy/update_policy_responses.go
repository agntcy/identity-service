// Code generated by go-swagger; DO NOT EDIT.

package policy

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
	stderrors "errors"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/agntcy/identity-service/backend/api/client/models"
)

// UpdatePolicyReader is a Reader for the UpdatePolicy structure.
type UpdatePolicyReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdatePolicyReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (any, error) {
	switch response.Code() {
	case 200:
		result := NewUpdatePolicyOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdatePolicyDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdatePolicyOK creates a UpdatePolicyOK with default headers values
func NewUpdatePolicyOK() *UpdatePolicyOK {
	return &UpdatePolicyOK{}
}

/*
UpdatePolicyOK describes a response with status code 200, with default header values.

A successful response.
*/
type UpdatePolicyOK struct {
	Payload *models.V1alpha1Policy
}

// IsSuccess returns true when this update policy o k response has a 2xx status code
func (o *UpdatePolicyOK) IsSuccess() bool {
	return true
}

// IsRedirect returns true when this update policy o k response has a 3xx status code
func (o *UpdatePolicyOK) IsRedirect() bool {
	return false
}

// IsClientError returns true when this update policy o k response has a 4xx status code
func (o *UpdatePolicyOK) IsClientError() bool {
	return false
}

// IsServerError returns true when this update policy o k response has a 5xx status code
func (o *UpdatePolicyOK) IsServerError() bool {
	return false
}

// IsCode returns true when this update policy o k response a status code equal to that given
func (o *UpdatePolicyOK) IsCode(code int) bool {
	return code == 200
}

// Code gets the status code for the update policy o k response
func (o *UpdatePolicyOK) Code() int {
	return 200
}

func (o *UpdatePolicyOK) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1alpha1/policies/{policyId}][%d] updatePolicyOK %s", 200, payload)
}

func (o *UpdatePolicyOK) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1alpha1/policies/{policyId}][%d] updatePolicyOK %s", 200, payload)
}

func (o *UpdatePolicyOK) GetPayload() *models.V1alpha1Policy {
	return o.Payload
}

func (o *UpdatePolicyOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.V1alpha1Policy)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}

// NewUpdatePolicyDefault creates a UpdatePolicyDefault with default headers values
func NewUpdatePolicyDefault(code int) *UpdatePolicyDefault {
	return &UpdatePolicyDefault{
		_statusCode: code,
	}
}

/*
UpdatePolicyDefault describes a response with status code -1, with default header values.

An unexpected error response.
*/
type UpdatePolicyDefault struct {
	_statusCode int

	Payload *models.RPCStatus
}

// IsSuccess returns true when this update policy default response has a 2xx status code
func (o *UpdatePolicyDefault) IsSuccess() bool {
	return o._statusCode/100 == 2
}

// IsRedirect returns true when this update policy default response has a 3xx status code
func (o *UpdatePolicyDefault) IsRedirect() bool {
	return o._statusCode/100 == 3
}

// IsClientError returns true when this update policy default response has a 4xx status code
func (o *UpdatePolicyDefault) IsClientError() bool {
	return o._statusCode/100 == 4
}

// IsServerError returns true when this update policy default response has a 5xx status code
func (o *UpdatePolicyDefault) IsServerError() bool {
	return o._statusCode/100 == 5
}

// IsCode returns true when this update policy default response a status code equal to that given
func (o *UpdatePolicyDefault) IsCode(code int) bool {
	return o._statusCode == code
}

// Code gets the status code for the update policy default response
func (o *UpdatePolicyDefault) Code() int {
	return o._statusCode
}

func (o *UpdatePolicyDefault) Error() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1alpha1/policies/{policyId}][%d] UpdatePolicy default %s", o._statusCode, payload)
}

func (o *UpdatePolicyDefault) String() string {
	payload, _ := json.Marshal(o.Payload)
	return fmt.Sprintf("[PATCH /v1alpha1/policies/{policyId}][%d] UpdatePolicy default %s", o._statusCode, payload)
}

func (o *UpdatePolicyDefault) GetPayload() *models.RPCStatus {
	return o.Payload
}

func (o *UpdatePolicyDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.RPCStatus)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && !stderrors.Is(err, io.EOF) {
		return err
	}

	return nil
}
